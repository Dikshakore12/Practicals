//Practical01
//Data type
package kore;

public class Datatype {
	int id;
	String name;
}
class Software{
	public static void main(String[] args) {
		Datatype d1=new Datatype();
		d1.id=220400300;
		d1.name="Diksha Kore";
		System.out.println("Name:"+d1.name+" Id:"+d1.id);
	}
}

//2nd part
package kore;

public class Student {

	public static void main(String[] args) {
		System.out.println("My name is Diksha");
		System.out.println("From 4th sem CSE");

	}

}


//practical02
package java_pakacge;

public class Bank {

	    float get_Rate_Of_Interest() {return 0;}
	    }
		class HDFC extends Bank{
		float get_Rate_Of_Interest() {return 2.5f;}
		}
		class SBI extends Bank{
		float get_Rate_Of_Interest() {return 6.5f;}
		}
		class CBI extends Bank{
	    float get_Rate_Of_Interest(){return 7.5f;}
		}
		class RBI extends Bank{
		float get_Rate_Of_Interest(){return 8.5f;}
		}
		class checkpolymorphism{
		public static void main(String args[]) {
		Bank b;
		b=new HDFC();
		System.out.println("BOB rate of interest is :"+b.get_Rate_Of_Interest());
		b=new SBI();
		System.out.println("SBI rate of interest is:"+b.get_Rate_Of_Interest());
		b=new CBI();
		System.out.println("CBI rate of interest is:"+b.get_Rate_Of_Interest());
		b=new RBI();
		System.out.println("RBI rate of interest is:"+b.get_Rate_Of_Interest());
		}
	}

//2nd part
package java_pakacge;

public class Calculator {
	public int add(int a, int b) {
		return a+b;
	}
    public double sub(double a,double b) {
    	return a-b;
    }
public static void main(String[] args) {
	Calculator c=new Calculator();
	int d1=c.add(22, 33);
	System.out.println("Sum of a and b is:"+d1);
	double d2=c.sub(2.5,1.5);
	System.out.println("substraction of a and b is:"+d2);
	
}
}

//practical03
//finalClass
package Final_keyword;

final public class FinalcClass {//final class
	//class Software extends FinalcClass{
	public static void main(String[] args) {
		//void run() {
			System.out.println("Software running safely with high performance");
		}
 
		//public static void main(String[] args) {
			//Software s1=new Software();
			//s1.run();
		//}
	}

//finalMethod
package Final_keyword;

public class FinalMethod {
	final void output() {//method
		System.out.println("This is the method using Fianl keyword");
	}
}
class Search extends FinalMethod{
	//void output(){
	//System.out.println("Search");
	//}
	public static void main(String[] args) {
		Search s=new Search();
		s.output();
	}
}	
//finalVariable
package Final_keyword;

public class Finalvariable {
	final int speed=250;//variable
	void show() {
		System.out.println("speed limit of car is :"+speed);
	}
	// speed=300;
	//System.out.println(speed);
	public static void main(String[] args) {
		Finalvariable a=new Finalvariable();
		a.show();
	}

}

//Practical04
//overloading
package overloading;

public class Apple {
	public int Add(int a,int b) {return a+b;}
	public int Add(int a,int b,int c) {return a+b+c;}
}
 class sum extends Apple{
	public static void main(String[] args) {
	Apple a=new Apple();
	System.out.println("Sum of a and b is:"+a.Add(30, 20));
	System.out.println("Sum of a,b and c is:"+a.Add(2, 4,6));

	}

}
//overriding
package overriding;

public class Vehicle {
	public void show() {
		System.out.println("This is the bike");
	}	
	}
class car extends Vehicle{
	public void show() {
		System.out.println("This is the car");
		
	}
}
class Output extends car{
	public static void main(String[] args) {
		car obj=new car();
		obj.show();
	}
}
//Practical05
//Abstraction
package Abtraction;

public abstract class Animal {
		 Animal(){
			  System.out.println("Animals eat grass"); 
		   }
		   abstract void Sound();
		   void ChangeSound() {
			   System.out.println("But tiger eat meat");
		   }
		}
		class Tiger extends Animal{
			void Sound() {
				System.out.println("The Sound of tiger is like roaring");
				}
		}
		class AbtractClass{
			public static void main(String[] args) {
				Animal t= new Tiger();
				t.Sound();
				t.ChangeSound();
				
			}
		}

//Practical06
//StringNew
package String_In_java;

public class StringNew {
	    public static void main(String[] args) {
	        String str = new String("Hello, World!");
	        System.out.println("String created using new: " + str);
	    }
	}
//Stringbuffer
package String_In_java;

public class StringBuffer1 {
	    public static void main(String[] args) {
	        StringBuffer buffer = new StringBuffer("Hello, ");
	        buffer.append("World!");
	        System.out.println("String created using StringBuffer: " + buffer.toString());
	    }
	}
//Stringbuilder
package String_In_java;

public class StringBuilder1 {
	    public static void main(String[] args) {
	        StringBuilder builder = new StringBuilder("Hello, ");
	        builder.append("Java!");
	        System.out.println("String created using StringBuilder: " + builder.toString());
	    }
	}
//Stringietral
package String_In_java;

public class StringLitral {
	    public static void main(String[] args) {
	        String str = "I Love Java";
	        String name="My name is Diksha kore";
	        System.out.println("String created using literal: " + str);
	        System.out.println(name);
	    }
	}
//Practical07
//MultipleInheritance
package Multiple_Inheritance;

public class Animal {
		public void eat() {
			System.out.println("Animal is eating.");
		}

	}
	class Vehicle {//using interface
		public void drive() {
			System.out.println("Vehicle is being driven.");
		}
	}
	class AnimalVehicle {
		private Animal animal;
		private Vehicle vehicle;
		
		public AnimalVehicle() {
			animal = new Animal();
			vehicle = new Vehicle();
		}
		public void eat() {
			animal.eat();
			
		}
		public void drive() {
			vehicle.drive();
		}
	}
	class testMultipleInheritance{
		public static void main(String[] args) {
			AnimalVehicle animalVehicle = new AnimalVehicle();
			animalVehicle.eat(); // output : Animal is eating.
			animalVehicle.drive(); //Output : Vehicle is being driven.
		}
	}
//Practical08
//ExceptionInJava
package Exception_in_java;

public class Test {

		public static void main(String[] args) {  
	        try{    
	             int a[]=new int[5];    
	             a[5]=30/0;    
	            }    
	            catch(ArithmeticException e)  
	               {  
	                System.out.println("Arithmetic Exception occurs");  
	               }    
	            catch(ArrayIndexOutOfBoundsException e)  
	               {  
	                System.out.println("ArrayIndexOutOfBounds Exception occurs");  
	               }    
	            catch(Exception e)  
	               {  
	                System.out.println("Parent Exception occurs");  
	               }             
	            System.out.println("Rest of the code");    
	 }  

	}
//Practical09
//Throw
package Throw;

public class TestThrow {

			public static void validate(int age) {
				if(age<18) {
					throw new ArithmeticException("Person is not eligible to vote");
					
				}
				else {
					System.out.println("Person is eligible to vote");
				}
			}
				public static void main(String[] args) {
					validate(17);
					System.out.println("Rest of the code");
				}
		}
//Practical10
//Tread
//multi
package Thread;

public class Multi extends Thread {

		public void run() {
			System.out.println("Thread is Running");
		}
	public static void main(String[] args) {
		Multi t1=new Multi();
		t1.start();
	}
	}
//Multi02
package Thread;

public class Multi2 implements Runnable{

		public void run() {
			System.out.println("Thread is Running...");
			
		}
	public static void main(String[] args) {
		Multi2 m1=new Multi2();
		Thread t1=new Thread(m1);//using the constructor thread
		t1.start();
	}
	}
	
//BEST OF LUCK!!!

